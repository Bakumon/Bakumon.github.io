<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://bakumon.cn/feed.xml" rel="self" type="application/atom+xml" /><link href="https://bakumon.cn/" rel="alternate" type="text/html" hreflang="zh-CN" /><updated>2021-07-19T10:22:25+00:00</updated><id>https://bakumon.cn/feed.xml</id><title type="html">食梦兽(BAKUMON)</title><subtitle>食梦兽的个人博客</subtitle><author><name>Bakumon</name></author><entry><title type="html">switch enum 导致的空指针异常</title><link href="https://bakumon.cn/p/java-switch-enum-null-pointer-exception.html" rel="alternate" type="text/html" title="switch enum 导致的空指针异常" /><published>2021-07-15T00:00:00+00:00</published><updated>2021-07-15T00:00:00+00:00</updated><id>https://bakumon.cn/p/java-switch-enum-null-pointer-exception</id><content type="html" xml:base="https://bakumon.cn/p/java-switch-enum-null-pointer-exception.html">&lt;p&gt;今天遇到了一个不太常见的空指针异常，特此记录下来，并且再稍微深入了解一些本质原因。&lt;/p&gt;

&lt;h2 id=&quot;nullpointerexception&quot;&gt;NullPointerException&lt;/h2&gt;

&lt;p&gt;异常如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Fatal Exception: java.lang.NullPointerException
Attempt to invoke virtual method 'int java.lang.Enum.ordinal()' on a null object reference
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当看到这个异常时，第一反应是 &lt;code class=&quot;highlighter-rouge&quot;&gt;ordinal()&lt;/code&gt; 是什么方法？我没调用过啊？？？&lt;/p&gt;

&lt;p&gt;冷静下来通过报错位置的提示，发现异常出现在 &lt;code class=&quot;highlighter-rouge&quot;&gt;switch(enum)&lt;/code&gt; 语句上。我们用以下示例代码说明：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 定义枚举类&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;no&quot;&gt;TOP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BOTTOM&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 声明 Position 变量，用于记录控制类型&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Position&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mPosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// foo 方法中对控制类型进行判断&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mPosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;TOP:&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TOP&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;BOTTOM:&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;BOTTOM&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;default&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;异常原因分析&quot;&gt;异常原因分析&lt;/h2&gt;

&lt;p&gt;我们定义了一个表示&lt;strong&gt;位置类型&lt;/strong&gt;的枚举类，它有两个类型： &lt;code class=&quot;highlighter-rouge&quot;&gt;TOP&lt;/code&gt;（上） 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;BOTTOM&lt;/code&gt;（下）。同时我们用一个成员变量记录位置类型，每当位置改变时，都更新这个成员变量的值。最后在一个方法里通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;switch&lt;/code&gt; 语句判断位置类型，根据不同值执行不同的逻辑代码。&lt;/p&gt;

&lt;p&gt;当我们还没有给 &lt;code class=&quot;highlighter-rouge&quot;&gt;mPosition&lt;/code&gt; 赋值时，希望执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;foo()&lt;/code&gt; 方法打印出 &lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;/code&gt;，但实际上当执行到 &lt;code class=&quot;highlighter-rouge&quot;&gt;switch(mPosition)&lt;/code&gt; 就报出了开始说的空指针异常。&lt;/p&gt;

&lt;p&gt;这是为什么呢？原来 &lt;code class=&quot;highlighter-rouge&quot;&gt;switch&lt;/code&gt; 不能判断 &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt;，这时候 &lt;code class=&quot;highlighter-rouge&quot;&gt;mPosition&lt;/code&gt; 还没有被赋值，是空的，所以就报了空指针异常。&lt;/p&gt;

&lt;p&gt;但是有为什么空指针会发生在调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;ordinal()&lt;/code&gt; 方法时？&lt;/p&gt;

&lt;p&gt;我们知道早期的&lt;code class=&quot;highlighter-rouge&quot;&gt;switch&lt;/code&gt;只支持基本类型，从 Java 1.5 才开始支持 String 类型，但还不支持其他引用类型。枚举其实也是 class，我们却可以把枚举用在 &lt;code class=&quot;highlighter-rouge&quot;&gt;switch&lt;/code&gt; 语句中。这个矛盾的根源来自于 JVM，JVM 发现 &lt;code class=&quot;highlighter-rouge&quot;&gt;switch&lt;/code&gt; 判读的是枚举时，会调用枚举对象的 &lt;code class=&quot;highlighter-rouge&quot;&gt;ordinal()&lt;/code&gt;，这个方法返回 int 值（表示顺序），用 int 来判断，这就回到了基本类型。&lt;/p&gt;

&lt;p&gt;所以我们看到了空指针异常发生在 &lt;code class=&quot;highlighter-rouge&quot;&gt;int java.lang.Enum.ordinal()&lt;/code&gt; 调用时。&lt;/p&gt;

&lt;h2 id=&quot;如何避免&quot;&gt;如何避免&lt;/h2&gt;

&lt;p&gt;在使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;switch&lt;/code&gt; 判断 String 或 enum 时，一定要保证值不能为空，上面的示例代码中，我们为了保证 mPosition 不为空，可以在声明时就初始化值，如果初始值是 TOP 或 BOTTOM 都不合适的话，可以加一种枚举类型（如 NONE）作初始值，同时也表示没有位置类型。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;no&quot;&gt;TOP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BOTTOM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NONE&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 初始化赋值&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Position&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mPosition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;未完待续。。。&lt;/p&gt;</content><author><name>Bakumon</name></author><category term="Java" /><summary type="html">今天遇到了一个不太常见的空指针异常，特此记录下来，并且再稍微深入了解一些本质原因。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i.loli.net/2021/07/16/LZziY7JkXeRBpsN.png" /></entry></feed>